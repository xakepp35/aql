// Code generated by "stringer -type=Code -trimprefix="; DO NOT EDIT.

package op

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Halt-28]
	_ = x[Call-29]
	_ = x[Over-30]
	_ = x[Loop-31]
	_ = x[Break-32]
	_ = x[Nil-33]
	_ = x[Pop-34]
	_ = x[Dup-35]
	_ = x[Swap-36]
	_ = x[Id-37]
	_ = x[Not-38]
	_ = x[And-39]
	_ = x[Or-40]
	_ = x[Xor-41]
	_ = x[Shl-42]
	_ = x[Shr-43]
	_ = x[Add-44]
	_ = x[Sub-45]
	_ = x[Mul-46]
	_ = x[Div-47]
	_ = x[Mod-48]
	_ = x[Eq-49]
	_ = x[Neq-50]
	_ = x[Lt-51]
	_ = x[Le-52]
	_ = x[Gt-53]
	_ = x[Ge-54]
	_ = x[Pipe-55]
	_ = x[Index1-56]
	_ = x[Index2-57]
	_ = x[Field-58]
}

const _Code_name = "HaltCallOverLoopBreakNilPopDupSwapIdNotAndOrXorShlShrAddSubMulDivModEqNeqLtLeGtGePipeIndex1Index2Field"

var _Code_index = [...]uint8{0, 4, 8, 12, 16, 21, 24, 27, 30, 34, 36, 39, 42, 44, 47, 50, 53, 56, 59, 62, 65, 68, 70, 73, 75, 77, 79, 81, 85, 91, 97, 102}

func (i Code) String() string {
	i -= 28
	if i >= Code(len(_Code_index)-1) {
		return "Code(" + strconv.FormatInt(int64(i+28), 10) + ")"
	}
	return _Code_name[_Code_index[i]:_Code_index[i+1]]
}
